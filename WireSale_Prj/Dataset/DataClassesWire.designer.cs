#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3619
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dataset
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="WireSales")]
	public partial class DataClassesWireDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_User(TBL_User instance);
    partial void UpdateTBL_User(TBL_User instance);
    partial void DeleteTBL_User(TBL_User instance);
    #endregion
		
		public DataClassesWireDataContext() : 
				base(global::Dataset.Properties.Settings.Default.WireSalesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWireDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWireDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWireDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWireDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_Wire> TBL_Wires
		{
			get
			{
				return this.GetTable<TBL_Wire>();
			}
		}
		
		public System.Data.Linq.Table<TBL_WireBuy> TBL_WireBuys
		{
			get
			{
				return this.GetTable<TBL_WireBuy>();
			}
		}
		
		public System.Data.Linq.Table<TBL_WireSale> TBL_WireSales
		{
			get
			{
				return this.GetTable<TBL_WireSale>();
			}
		}
		
		public System.Data.Linq.Table<TBL_User> TBL_Users
		{
			get
			{
				return this.GetTable<TBL_User>();
			}
		}
	}
	
	[Table(Name="dbo.TBL_Wire")]
	public partial class TBL_Wire
	{
		
		private int _WireCode;
		
		private string _WireName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<double> _WireAmount;
		
		private string _WireDsc;
		
		public TBL_Wire()
		{
		}
		
		[Column(Storage="_WireCode", DbType="Int NOT NULL")]
		public int WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_WireAmount", DbType="Float")]
		public System.Nullable<double> WireAmount
		{
			get
			{
				return this._WireAmount;
			}
			set
			{
				if ((this._WireAmount != value))
				{
					this._WireAmount = value;
				}
			}
		}
		
		[Column(Storage="_WireDsc", DbType="NVarChar(MAX)")]
		public string WireDsc
		{
			get
			{
				return this._WireDsc;
			}
			set
			{
				if ((this._WireDsc != value))
				{
					this._WireDsc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TBL_WireBuy")]
	public partial class TBL_WireBuy
	{
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private System.Nullable<double> _BuyAmount;
		
		private System.Nullable<System.DateTime> _BuyDate;
		
		public TBL_WireBuy()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_BuyAmount", DbType="Float")]
		public System.Nullable<double> BuyAmount
		{
			get
			{
				return this._BuyAmount;
			}
			set
			{
				if ((this._BuyAmount != value))
				{
					this._BuyAmount = value;
				}
			}
		}
		
		[Column(Storage="_BuyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyDate
		{
			get
			{
				return this._BuyDate;
			}
			set
			{
				if ((this._BuyDate != value))
				{
					this._BuyDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TBL_WireSale")]
	public partial class TBL_WireSale
	{
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private System.Nullable<double> _SaleAmount;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
		public TBL_WireSale()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_SaleAmount", DbType="Float")]
		public System.Nullable<double> SaleAmount
		{
			get
			{
				return this._SaleAmount;
			}
			set
			{
				if ((this._SaleAmount != value))
				{
					this._SaleAmount = value;
				}
			}
		}
		
		[Column(Storage="_SaleDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this._SaleDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TBL_Users")]
	public partial class TBL_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UserPermission;
		
		private string _UserPrmHouseFor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCodeChanging(int value);
    partial void OnUserCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUserPermissionChanging(string value);
    partial void OnUserPermissionChanged();
    partial void OnUserPrmHouseForChanging(string value);
    partial void OnUserPrmHouseForChanged();
    #endregion
		
		public TBL_User()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(30)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_UserPermission", DbType="VarChar(4000)")]
		public string UserPermission
		{
			get
			{
				return this._UserPermission;
			}
			set
			{
				if ((this._UserPermission != value))
				{
					this.OnUserPermissionChanging(value);
					this.SendPropertyChanging();
					this._UserPermission = value;
					this.SendPropertyChanged("UserPermission");
					this.OnUserPermissionChanged();
				}
			}
		}
		
		[Column(Storage="_UserPrmHouseFor", DbType="NVarChar(200)")]
		public string UserPrmHouseFor
		{
			get
			{
				return this._UserPrmHouseFor;
			}
			set
			{
				if ((this._UserPrmHouseFor != value))
				{
					this.OnUserPrmHouseForChanging(value);
					this.SendPropertyChanging();
					this._UserPrmHouseFor = value;
					this.SendPropertyChanged("UserPrmHouseFor");
					this.OnUserPrmHouseForChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
