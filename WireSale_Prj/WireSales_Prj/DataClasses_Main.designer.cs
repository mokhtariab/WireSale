#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WireSales_Prj
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="WireSales")]
	public partial class DataClasses_MainDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_User(TBL_User instance);
    partial void UpdateTBL_User(TBL_User instance);
    partial void DeleteTBL_User(TBL_User instance);
    partial void InsertTBL_Wire(TBL_Wire instance);
    partial void UpdateTBL_Wire(TBL_Wire instance);
    partial void DeleteTBL_Wire(TBL_Wire instance);
    partial void InsertTBL_WireBuy(TBL_WireBuy instance);
    partial void UpdateTBL_WireBuy(TBL_WireBuy instance);
    partial void DeleteTBL_WireBuy(TBL_WireBuy instance);
    partial void InsertTBL_WireSale(TBL_WireSale instance);
    partial void UpdateTBL_WireSale(TBL_WireSale instance);
    partial void DeleteTBL_WireSale(TBL_WireSale instance);
    partial void InsertTBL_Convert(TBL_Convert instance);
    partial void UpdateTBL_Convert(TBL_Convert instance);
    partial void DeleteTBL_Convert(TBL_Convert instance);
    #endregion
		
		public DataClasses_MainDataContext() : 
				base(global::WireSales_Prj.Properties.Settings.Default.WireSalesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_MainDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_MainDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_MainDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_MainDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_User> TBL_Users
		{
			get
			{
				return this.GetTable<TBL_User>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Wire> TBL_Wires
		{
			get
			{
				return this.GetTable<TBL_Wire>();
			}
		}
		
		public System.Data.Linq.Table<TBL_WireBuy> TBL_WireBuys
		{
			get
			{
				return this.GetTable<TBL_WireBuy>();
			}
		}
		
		public System.Data.Linq.Table<TBL_WireSale> TBL_WireSales
		{
			get
			{
				return this.GetTable<TBL_WireSale>();
			}
		}
		
		public System.Data.Linq.Table<Vw_WireList> Vw_WireLists
		{
			get
			{
				return this.GetTable<Vw_WireList>();
			}
		}
		
		public System.Data.Linq.Table<Vw_WireBuyList> Vw_WireBuyLists
		{
			get
			{
				return this.GetTable<Vw_WireBuyList>();
			}
		}
		
		public System.Data.Linq.Table<Vw_WireSaleList> Vw_WireSaleLists
		{
			get
			{
				return this.GetTable<Vw_WireSaleList>();
			}
		}
		
		public System.Data.Linq.Table<Vw_ChartView> Vw_ChartViews
		{
			get
			{
				return this.GetTable<Vw_ChartView>();
			}
		}
		
		public System.Data.Linq.Table<Vw_ActionWireList> Vw_ActionWireLists
		{
			get
			{
				return this.GetTable<Vw_ActionWireList>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Convert> TBL_Converts
		{
			get
			{
				return this.GetTable<TBL_Convert>();
			}
		}
		
		public System.Data.Linq.Table<Vw_ActionBuySale> Vw_ActionBuySales
		{
			get
			{
				return this.GetTable<Vw_ActionBuySale>();
			}
		}
		
		[Function(Name="dbo.Sp_SetMonthYearForChart")]
		public int Sp_SetMonthYearForChart([Parameter(Name="SelectMode", DbType="Bit")] System.Nullable<bool> selectMode, [Parameter(Name="DateStart", DbType="DateTime")] System.Nullable<System.DateTime> dateStart, [Parameter(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectMode, dateStart, dateEnd);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Sp_SetMonthYearWithCodeForChart")]
		public int Sp_SetMonthYearWithCodeForChart([Parameter(Name="SelectMode", DbType="Bit")] System.Nullable<bool> selectMode, [Parameter(Name="DateStart", DbType="DateTime")] System.Nullable<System.DateTime> dateStart, [Parameter(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd, [Parameter(Name="WireCode", DbType="Int")] System.Nullable<int> wireCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectMode, dateStart, dateEnd, wireCode);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.Sp_SetConvert")]
		public int Sp_SetConvert([Parameter(Name="DateStart", DbType="DateTime")] System.Nullable<System.DateTime> dateStart, [Parameter(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateStart, dateEnd);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.TBL_Users")]
	public partial class TBL_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UserPermission;
		
		private string _UserPrmHouseFor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCodeChanging(int value);
    partial void OnUserCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUserPermissionChanging(string value);
    partial void OnUserPermissionChanged();
    partial void OnUserPrmHouseForChanging(string value);
    partial void OnUserPrmHouseForChanged();
    #endregion
		
		public TBL_User()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(30)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_UserPermission", DbType="VarChar(4000)")]
		public string UserPermission
		{
			get
			{
				return this._UserPermission;
			}
			set
			{
				if ((this._UserPermission != value))
				{
					this.OnUserPermissionChanging(value);
					this.SendPropertyChanging();
					this._UserPermission = value;
					this.SendPropertyChanged("UserPermission");
					this.OnUserPermissionChanged();
				}
			}
		}
		
		[Column(Storage="_UserPrmHouseFor", DbType="NVarChar(200)")]
		public string UserPrmHouseFor
		{
			get
			{
				return this._UserPrmHouseFor;
			}
			set
			{
				if ((this._UserPrmHouseFor != value))
				{
					this.OnUserPrmHouseForChanging(value);
					this.SendPropertyChanging();
					this._UserPrmHouseFor = value;
					this.SendPropertyChanged("UserPrmHouseFor");
					this.OnUserPrmHouseForChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TBL_Wire")]
	public partial class TBL_Wire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WireCode;
		
		private string _WireName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<double> _WireAmount;
		
		private string _WireDsc;
		
		private EntitySet<TBL_WireBuy> _TBL_WireBuys;
		
		private EntitySet<TBL_WireSale> _TBL_WireSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWireCodeChanging(int value);
    partial void OnWireCodeChanged();
    partial void OnWireNameChanging(string value);
    partial void OnWireNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnWireAmountChanging(System.Nullable<double> value);
    partial void OnWireAmountChanged();
    partial void OnWireDscChanging(string value);
    partial void OnWireDscChanged();
    #endregion
		
		public TBL_Wire()
		{
			this._TBL_WireBuys = new EntitySet<TBL_WireBuy>(new Action<TBL_WireBuy>(this.attach_TBL_WireBuys), new Action<TBL_WireBuy>(this.detach_TBL_WireBuys));
			this._TBL_WireSales = new EntitySet<TBL_WireSale>(new Action<TBL_WireSale>(this.attach_TBL_WireSales), new Action<TBL_WireSale>(this.detach_TBL_WireSales));
			OnCreated();
		}
		
		[Column(Storage="_WireCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this.OnWireCodeChanging(value);
					this.SendPropertyChanging();
					this._WireCode = value;
					this.SendPropertyChanged("WireCode");
					this.OnWireCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this.OnWireNameChanging(value);
					this.SendPropertyChanging();
					this._WireName = value;
					this.SendPropertyChanged("WireName");
					this.OnWireNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_WireAmount", DbType="Float")]
		public System.Nullable<double> WireAmount
		{
			get
			{
				return this._WireAmount;
			}
			set
			{
				if ((this._WireAmount != value))
				{
					this.OnWireAmountChanging(value);
					this.SendPropertyChanging();
					this._WireAmount = value;
					this.SendPropertyChanged("WireAmount");
					this.OnWireAmountChanged();
				}
			}
		}
		
		[Column(Storage="_WireDsc", DbType="NVarChar(MAX)")]
		public string WireDsc
		{
			get
			{
				return this._WireDsc;
			}
			set
			{
				if ((this._WireDsc != value))
				{
					this.OnWireDscChanging(value);
					this.SendPropertyChanging();
					this._WireDsc = value;
					this.SendPropertyChanged("WireDsc");
					this.OnWireDscChanged();
				}
			}
		}
		
		[Association(Name="TBL_Wire_TBL_WireBuy", Storage="_TBL_WireBuys", OtherKey="WireCode")]
		public EntitySet<TBL_WireBuy> TBL_WireBuys
		{
			get
			{
				return this._TBL_WireBuys;
			}
			set
			{
				this._TBL_WireBuys.Assign(value);
			}
		}
		
		[Association(Name="TBL_Wire_TBL_WireSale", Storage="_TBL_WireSales", OtherKey="WireCode")]
		public EntitySet<TBL_WireSale> TBL_WireSales
		{
			get
			{
				return this._TBL_WireSales;
			}
			set
			{
				this._TBL_WireSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_WireBuys(TBL_WireBuy entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Wire = this;
		}
		
		private void detach_TBL_WireBuys(TBL_WireBuy entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Wire = null;
		}
		
		private void attach_TBL_WireSales(TBL_WireSale entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Wire = this;
		}
		
		private void detach_TBL_WireSales(TBL_WireSale entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Wire = null;
		}
	}
	
	[Table(Name="dbo.TBL_WireBuy")]
	public partial class TBL_WireBuy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private System.Nullable<double> _BuyAmount;
		
		private System.Nullable<System.DateTime> _BuyDate;
		
		private EntityRef<TBL_Wire> _TBL_Wire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWireCodeChanging(System.Nullable<int> value);
    partial void OnWireCodeChanged();
    partial void OnBuyAmountChanging(System.Nullable<double> value);
    partial void OnBuyAmountChanged();
    partial void OnBuyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBuyDateChanged();
    #endregion
		
		public TBL_WireBuy()
		{
			this._TBL_Wire = default(EntityRef<TBL_Wire>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					if (this._TBL_Wire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWireCodeChanging(value);
					this.SendPropertyChanging();
					this._WireCode = value;
					this.SendPropertyChanged("WireCode");
					this.OnWireCodeChanged();
				}
			}
		}
		
		[Column(Storage="_BuyAmount", DbType="Float")]
		public System.Nullable<double> BuyAmount
		{
			get
			{
				return this._BuyAmount;
			}
			set
			{
				if ((this._BuyAmount != value))
				{
					this.OnBuyAmountChanging(value);
					this.SendPropertyChanging();
					this._BuyAmount = value;
					this.SendPropertyChanged("BuyAmount");
					this.OnBuyAmountChanged();
				}
			}
		}
		
		[Column(Storage="_BuyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyDate
		{
			get
			{
				return this._BuyDate;
			}
			set
			{
				if ((this._BuyDate != value))
				{
					this.OnBuyDateChanging(value);
					this.SendPropertyChanging();
					this._BuyDate = value;
					this.SendPropertyChanged("BuyDate");
					this.OnBuyDateChanged();
				}
			}
		}
		
		[Association(Name="TBL_Wire_TBL_WireBuy", Storage="_TBL_Wire", ThisKey="WireCode", IsForeignKey=true)]
		public TBL_Wire TBL_Wire
		{
			get
			{
				return this._TBL_Wire.Entity;
			}
			set
			{
				TBL_Wire previousValue = this._TBL_Wire.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Wire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Wire.Entity = null;
						previousValue.TBL_WireBuys.Remove(this);
					}
					this._TBL_Wire.Entity = value;
					if ((value != null))
					{
						value.TBL_WireBuys.Add(this);
						this._WireCode = value.WireCode;
					}
					else
					{
						this._WireCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_Wire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TBL_WireSale")]
	public partial class TBL_WireSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private System.Nullable<double> _SaleAmount;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
		private EntityRef<TBL_Wire> _TBL_Wire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWireCodeChanging(System.Nullable<int> value);
    partial void OnWireCodeChanged();
    partial void OnSaleAmountChanging(System.Nullable<double> value);
    partial void OnSaleAmountChanged();
    partial void OnSaleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleDateChanged();
    #endregion
		
		public TBL_WireSale()
		{
			this._TBL_Wire = default(EntityRef<TBL_Wire>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					if (this._TBL_Wire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWireCodeChanging(value);
					this.SendPropertyChanging();
					this._WireCode = value;
					this.SendPropertyChanged("WireCode");
					this.OnWireCodeChanged();
				}
			}
		}
		
		[Column(Storage="_SaleAmount", DbType="Float")]
		public System.Nullable<double> SaleAmount
		{
			get
			{
				return this._SaleAmount;
			}
			set
			{
				if ((this._SaleAmount != value))
				{
					this.OnSaleAmountChanging(value);
					this.SendPropertyChanging();
					this._SaleAmount = value;
					this.SendPropertyChanged("SaleAmount");
					this.OnSaleAmountChanged();
				}
			}
		}
		
		[Column(Storage="_SaleDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[Association(Name="TBL_Wire_TBL_WireSale", Storage="_TBL_Wire", ThisKey="WireCode", IsForeignKey=true)]
		public TBL_Wire TBL_Wire
		{
			get
			{
				return this._TBL_Wire.Entity;
			}
			set
			{
				TBL_Wire previousValue = this._TBL_Wire.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Wire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Wire.Entity = null;
						previousValue.TBL_WireSales.Remove(this);
					}
					this._TBL_Wire.Entity = value;
					if ((value != null))
					{
						value.TBL_WireSales.Add(this);
						this._WireCode = value.WireCode;
					}
					else
					{
						this._WireCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_Wire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Vw_WireList")]
	public partial class Vw_WireList
	{
		
		private System.Nullable<long> _RowNo;
		
		private int _WireCode;
		
		private string _WireName;
		
		private string _CreateDate;
		
		private System.Nullable<double> _WireAmount;
		
		private string _WireDsc;
		
		public Vw_WireList()
		{
		}
		
		[Column(Storage="_RowNo", DbType="BigInt")]
		public System.Nullable<long> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int NOT NULL")]
		public int WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="VarChar(10)")]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_WireAmount", DbType="Float")]
		public System.Nullable<double> WireAmount
		{
			get
			{
				return this._WireAmount;
			}
			set
			{
				if ((this._WireAmount != value))
				{
					this._WireAmount = value;
				}
			}
		}
		
		[Column(Storage="_WireDsc", DbType="NVarChar(MAX)")]
		public string WireDsc
		{
			get
			{
				return this._WireDsc;
			}
			set
			{
				if ((this._WireDsc != value))
				{
					this._WireDsc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Vw_WireBuyList")]
	public partial class Vw_WireBuyList
	{
		
		private System.Nullable<long> _RowNo;
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private string _BuyDate;
		
		private System.Nullable<double> _BuyAmount;
		
		private string _WireName;
		
		private string _WireDsc;
		
		public Vw_WireBuyList()
		{
		}
		
		[Column(Storage="_RowNo", DbType="BigInt")]
		public System.Nullable<long> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_BuyDate", DbType="VarChar(10)")]
		public string BuyDate
		{
			get
			{
				return this._BuyDate;
			}
			set
			{
				if ((this._BuyDate != value))
				{
					this._BuyDate = value;
				}
			}
		}
		
		[Column(Storage="_BuyAmount", DbType="Float")]
		public System.Nullable<double> BuyAmount
		{
			get
			{
				return this._BuyAmount;
			}
			set
			{
				if ((this._BuyAmount != value))
				{
					this._BuyAmount = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_WireDsc", DbType="NVarChar(MAX)")]
		public string WireDsc
		{
			get
			{
				return this._WireDsc;
			}
			set
			{
				if ((this._WireDsc != value))
				{
					this._WireDsc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Vw_WireSaleList")]
	public partial class Vw_WireSaleList
	{
		
		private System.Nullable<long> _RowNo;
		
		private int _id;
		
		private System.Nullable<int> _WireCode;
		
		private string _SaleDate;
		
		private System.Nullable<double> _SaleAmount;
		
		private string _WireName;
		
		private string _WireDsc;
		
		public Vw_WireSaleList()
		{
		}
		
		[Column(Storage="_RowNo", DbType="BigInt")]
		public System.Nullable<long> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_SaleDate", DbType="VarChar(10)")]
		public string SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this._SaleDate = value;
				}
			}
		}
		
		[Column(Storage="_SaleAmount", DbType="Float")]
		public System.Nullable<double> SaleAmount
		{
			get
			{
				return this._SaleAmount;
			}
			set
			{
				if ((this._SaleAmount != value))
				{
					this._SaleAmount = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_WireDsc", DbType="NVarChar(MAX)")]
		public string WireDsc
		{
			get
			{
				return this._WireDsc;
			}
			set
			{
				if ((this._WireDsc != value))
				{
					this._WireDsc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Vw_ChartView")]
	public partial class Vw_ChartView
	{
		
		private int _WireCode;
		
		private string _WireName;
		
		private System.Nullable<double> _WireAmount;
		
		private System.Nullable<double> _BuyAmount;
		
		private System.Nullable<double> _SaleAmount;
		
		public Vw_ChartView()
		{
		}
		
		[Column(Storage="_WireCode", DbType="Int NOT NULL")]
		public int WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_WireAmount", DbType="Float")]
		public System.Nullable<double> WireAmount
		{
			get
			{
				return this._WireAmount;
			}
			set
			{
				if ((this._WireAmount != value))
				{
					this._WireAmount = value;
				}
			}
		}
		
		[Column(Storage="_BuyAmount", DbType="Float")]
		public System.Nullable<double> BuyAmount
		{
			get
			{
				return this._BuyAmount;
			}
			set
			{
				if ((this._BuyAmount != value))
				{
					this._BuyAmount = value;
				}
			}
		}
		
		[Column(Storage="_SaleAmount", DbType="Float")]
		public System.Nullable<double> SaleAmount
		{
			get
			{
				return this._SaleAmount;
			}
			set
			{
				if ((this._SaleAmount != value))
				{
					this._SaleAmount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Vw_ActionWireList")]
	public partial class Vw_ActionWireList
	{
		
		private System.Nullable<int> _WireCode;
		
		private string _WireName;
		
		private System.Nullable<System.DateTime> _ActionDate;
		
		private System.Nullable<double> _Buy;
		
		private System.Nullable<double> _Sale;
		
		private System.Nullable<double> _Inventory;
		
		public Vw_ActionWireList()
		{
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_ActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this._ActionDate = value;
				}
			}
		}
		
		[Column(Storage="_Buy", DbType="Float")]
		public System.Nullable<double> Buy
		{
			get
			{
				return this._Buy;
			}
			set
			{
				if ((this._Buy != value))
				{
					this._Buy = value;
				}
			}
		}
		
		[Column(Storage="_Sale", DbType="Float")]
		public System.Nullable<double> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				if ((this._Sale != value))
				{
					this._Sale = value;
				}
			}
		}
		
		[Column(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this._Inventory = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.TBL_Convert")]
	public partial class TBL_Convert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _WCode;
		
		private string _WName;
		
		private string _Date;
		
		private System.Nullable<int> _Buy;
		
		private System.Nullable<int> _Sale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWCodeChanging(System.Nullable<int> value);
    partial void OnWCodeChanged();
    partial void OnWNameChanging(string value);
    partial void OnWNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnBuyChanging(System.Nullable<int> value);
    partial void OnBuyChanged();
    partial void OnSaleChanging(System.Nullable<int> value);
    partial void OnSaleChanged();
    #endregion
		
		public TBL_Convert()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_WCode", DbType="Int")]
		public System.Nullable<int> WCode
		{
			get
			{
				return this._WCode;
			}
			set
			{
				if ((this._WCode != value))
				{
					this.OnWCodeChanging(value);
					this.SendPropertyChanging();
					this._WCode = value;
					this.SendPropertyChanged("WCode");
					this.OnWCodeChanged();
				}
			}
		}
		
		[Column(Storage="_WName", DbType="NVarChar(100)")]
		public string WName
		{
			get
			{
				return this._WName;
			}
			set
			{
				if ((this._WName != value))
				{
					this.OnWNameChanging(value);
					this.SendPropertyChanging();
					this._WName = value;
					this.SendPropertyChanged("WName");
					this.OnWNameChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Buy", DbType="Int")]
		public System.Nullable<int> Buy
		{
			get
			{
				return this._Buy;
			}
			set
			{
				if ((this._Buy != value))
				{
					this.OnBuyChanging(value);
					this.SendPropertyChanging();
					this._Buy = value;
					this.SendPropertyChanged("Buy");
					this.OnBuyChanged();
				}
			}
		}
		
		[Column(Storage="_Sale", DbType="Int")]
		public System.Nullable<int> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				if ((this._Sale != value))
				{
					this.OnSaleChanging(value);
					this.SendPropertyChanging();
					this._Sale = value;
					this.SendPropertyChanged("Sale");
					this.OnSaleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Vw_ActionBuySale")]
	public partial class Vw_ActionBuySale
	{
		
		private System.Nullable<int> _idbuy;
		
		private System.Nullable<int> _idsale;
		
		private System.Nullable<int> _WireCode;
		
		private string _WireName;
		
		private System.Nullable<System.DateTime> _ActionDate;
		
		private System.Nullable<double> _Buy;
		
		private System.Nullable<double> _Sale;
		
		private System.Nullable<double> _Inventory;
		
		public Vw_ActionBuySale()
		{
		}
		
		[Column(Storage="_idbuy", DbType="Int")]
		public System.Nullable<int> idbuy
		{
			get
			{
				return this._idbuy;
			}
			set
			{
				if ((this._idbuy != value))
				{
					this._idbuy = value;
				}
			}
		}
		
		[Column(Storage="_idsale", DbType="Int")]
		public System.Nullable<int> idsale
		{
			get
			{
				return this._idsale;
			}
			set
			{
				if ((this._idsale != value))
				{
					this._idsale = value;
				}
			}
		}
		
		[Column(Storage="_WireCode", DbType="Int")]
		public System.Nullable<int> WireCode
		{
			get
			{
				return this._WireCode;
			}
			set
			{
				if ((this._WireCode != value))
				{
					this._WireCode = value;
				}
			}
		}
		
		[Column(Storage="_WireName", DbType="NVarChar(100)")]
		public string WireName
		{
			get
			{
				return this._WireName;
			}
			set
			{
				if ((this._WireName != value))
				{
					this._WireName = value;
				}
			}
		}
		
		[Column(Storage="_ActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this._ActionDate = value;
				}
			}
		}
		
		[Column(Storage="_Buy", DbType="Float")]
		public System.Nullable<double> Buy
		{
			get
			{
				return this._Buy;
			}
			set
			{
				if ((this._Buy != value))
				{
					this._Buy = value;
				}
			}
		}
		
		[Column(Storage="_Sale", DbType="Float")]
		public System.Nullable<double> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				if ((this._Sale != value))
				{
					this._Sale = value;
				}
			}
		}
		
		[Column(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this._Inventory = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
